{"version":3,"file":"ngx-gauge.umd.min.js","sources":["~/ngx-gauge/common/util.ts","~/ngx-gauge/gauge/gauge.ts","~/ngx-gauge/gauge/index.ts"],"sourcesContent":["export function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\nexport function coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\nexport function coerceNumberProperty(value: any, fallbackValue: number = 0): number {\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\nexport function cssUnit(value: number) {\n    return `${value}px`;\n}\nexport function isNumber(value: string) {\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}","import {\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation,\n    Renderer,\n    AfterViewInit,\n    ElementRef,\n    OnChanges,\n    OnDestroy,\n    ViewChild\n} from '@angular/core';\nimport { NgxGaugeError } from './gauge-error';\nimport {\n    clamp,\n    coerceBooleanProperty,\n    coerceNumberProperty,\n    cssUnit,\n    isNumber\n} from '../common/util';\n\nconst DEFAULTS = {\n    MIN: 0,\n    MAX: 100,\n    TYPE: 'arch',\n    THICK: 4,\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n    CAP: 'butt',\n    SIZE: 200\n};\n\nexport type NgxGaugeType = 'full' | 'arch' | 'semi';\nexport type NgxGaugeCap = 'round' | 'butt';\n\n@Component({\n    selector: 'ngx-gauge',\n    template: `\n      <div class=\"reading-block\" #reading [style.fontSize]=\"size * 0.22 + 'px'\" [style.lineHeight]=\"55 + 'px'\">\n          <u class=\"reading-affix\">{{prepend}}</u>\n          <div [ngClass]=\"{\n      \t\t\t\t\t\t'high': value > 75,\n      \t\t\t\t\t\t'low' : value < 41,\n      \t\t\t\t\t\t'medium' : value < 76 && value > 40\n      \t\t\t\t\t}\">\n          \t{{value | number}}\n          </div>\n          <u class=\"reading-affix\">{{append}}</u>\n      </div>\n      <div [ngClass]=\"reading-label\" [style.fontSize]=\"size / 13 + 'px'\" [style.lineHeight]=\"(5 * size / 13) + size + 'px'\">{{label}}</div>\n      <canvas #canvas [width]=\"size\" [height]=\"size\"></canvas>\n    `,\n    styles: [`\n      .ngx-gauge-meter {\n          display: inline-block;\n          text-align: center;\n          position: relative;\n      }\n\n      .reading-block {\n          position: absolute;\n          width: 100%;\n          font-weight: normal;\n          white-space: nowrap;\n          text-align: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n      }\n\n      .reading-label {\n          font-family: inherit;\n          width: 100%;\n          display: inline-block;\n          position: absolute;\n          text-align: center;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          font-weight: normal;\n      }\n\n      .reading-affix {\n          text-decoration: none;\n          font-size: 0.6em;\n          opacity: 0.8;\n          font-weight: 200;\n          padding: 0 0.18em;\n      }\n\n      .reading-affix:first-child {\n          padding-left: 0;\n      }\n\n      .reading-affix:last-child {\n          padding-right: 0;\n      }\n\n      .high {\n          color: #2DB821;\n      }\n\n      .medium {\n          color: #FFAC30;\n      }\n\n      .low {\n          color: #FF213C;\n      }\n    `],\n    host: {\n        'role': 'meter',\n        '[class.ngx-gauge-meter]': 'true',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'value'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxGauge implements AfterViewInit, OnChanges, OnDestroy {\n\n    @ViewChild('canvas') _canvas: ElementRef;\n\n    private _size: number = DEFAULTS.SIZE;\n    private _min: number = DEFAULTS.MIN;\n    private _max: number = DEFAULTS.MAX;\n\n    private _initialized: boolean = false;\n    private _context: CanvasRenderingContext2D;\n\n    @Input()\n    get size(): number { return this._size; }\n    set size(value: number) {\n        this._size = coerceNumberProperty(value);\n    }\n\n    @Input()\n    get min(): number { return this._min; }\n    set min(value: number) {\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\n    }\n\n    @Input() max: number = DEFAULTS.MAX;\n\n    @Input() type: NgxGaugeType = DEFAULTS.TYPE as NgxGaugeType;\n\n    @Input() cap: NgxGaugeCap = DEFAULTS.CAP as NgxGaugeCap;\n\n    @Input() thick: number = DEFAULTS.THICK;\n\n    @Input() label: string;\n\n    @Input() append: string;\n\n    @Input() prepend: string;\n\n    @Input() foregroundColor: string = DEFAULTS.FOREGROUND_COLOR;\n\n    @Input() backgroundColor: string = DEFAULTS.BACKGROUND_COLOR;\n\n    @Input() thresholds: Object = Object.create(null);\n\n    private _value: number = 0;\n\n    @Input()\n    get value() { return this._value; }\n    set value(val: number) {\n        this._value = coerceNumberProperty(val);\n    }\n\n    @Input() duration: number = 1200;\n\n    constructor(private _elementRef: ElementRef, private _renderer: Renderer) { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const isTextChanged = changes['label'] || changes['append'] || changes['prepend'];\n        const isDataChanged = changes['value'] || changes['min'] || changes['max'];\n\n        if (this._initialized) {\n            if (isDataChanged) {\n                this._update();\n            } else if (!isTextChanged) {\n                this._destroy();\n                this._init();\n            }\n        }\n    }\n\n    private _updateSize() {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', cssUnit(this._size));\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'height', cssUnit(this._size));\n    }\n\n    ngAfterViewInit() {\n        if (this._canvas) {\n            this._init();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy();\n    }\n\n    private _getBounds(type: NgxGaugeType) {\n        let head, tail;\n        if (type == 'semi') {\n            head = Math.PI;\n            tail = 2 * Math.PI;\n        } else if (type == 'full') {\n            head = 1.5 * Math.PI;\n            tail = 3.5 * Math.PI;\n        } else if (type === 'arch') {\n            head = 0.8 * Math.PI;\n            tail = 2.2 * Math.PI;\n        }\n        return { head, tail };\n    }\n\n    private _drawShell(start: number, middle: number, tail: number, color: string) {\n        let center = this._getCenter(),\n            radius = this._getRadius();\n\n        this._clear();\n        this._context.beginPath();\n        this._context.strokeStyle = this.backgroundColor;\n        this._context.arc(center.x, center.y, radius, middle, tail, false);\n        this._context.stroke();\n\n        this._context.beginPath();\n        this._context.strokeStyle = color;\n        this._context.arc(center.x, center.y, radius, start, middle, false);\n        this._context.stroke();\n\n    }\n\n    private _clear() {\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\n    }\n\n    private _getWidth() {\n        return this.size;\n    }\n\n    private _getHeight() {\n        return this.size;\n    }\n\n    private _getRadius() {\n        var center = this._getCenter();\n        return center.x - this.thick;\n    }\n\n    private _getCenter() {\n        var x = this._getWidth() / 2,\n            y = this._getHeight() / 2;\n        return { x, y };\n    }\n\n    private _init() {\n        this._context = (this._canvas.nativeElement as HTMLCanvasElement).getContext('2d');\n        this._initialized = true;\n        this._updateSize();\n        this._setupStyles();\n        this._create();\n    }\n\n    private _destroy() {\n        this._clear();\n        this._context = null;\n    }\n\n    private _setupStyles() {\n        this._context.canvas.width = this.size;\n        this._context.canvas.height = this.size;\n        this._context.lineCap = this.cap;\n        this._context.lineWidth = this.thick;\n    }\n\n    private _getForegroundColorByRange(value) {\n       \n        const match = Object.keys(this.thresholds)\n            .filter(function (item) { return isNumber(item) && Number(item) <= value })\n            .sort((a, b) => Number(a) - Number(b)).reverse()[0];\n\n        return match !== undefined\n            ? this.thresholds[match].color || this.foregroundColor\n            : this.foregroundColor;\n    }\n\n    private _create() {\n        let self = this,\n            type = this.type,\n            bounds = this._getBounds(type),\n            duration = this.duration,\n            min = this.min,\n            max = this.max,\n            value = clamp(this.value, this.min, this.max),\n            head = bounds.head,\n            unit = (bounds.tail - bounds.head) / (max - min),\n            displacement = unit * (value - min),\n            tail = bounds.tail,\n            color = this._getForegroundColorByRange(value),\n            requestID,\n            starttime;\n\n        function animate(timestamp) {\n            timestamp = timestamp || new Date().getTime();\n            var runtime = timestamp - starttime;\n            var progress = runtime / duration;\n            progress = Math.min(progress, 1);\n\n            self._drawShell(head, head + displacement * progress, tail, color);\n            if (runtime < duration) {\n                requestID = window.requestAnimationFrame((timestamp) => animate(timestamp));\n            } else {\n                window.cancelAnimationFrame(requestID);\n            }\n        }\n\n        window.requestAnimationFrame((timestamp) => {\n            starttime = timestamp || new Date().getTime();\n            animate(timestamp);\n        });\n    }\n\n    private _update() {\n        this._clear();\n        this._create();\n    }\n\n}","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxGauge} from './gauge';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [NgxGauge],\n    exports: [NgxGauge]\n})\nexport class NgxGaugeModule { }"],"names":["coerceNumberProperty","value","fallbackValue","isNaN","parseFloat","Number","cssUnit","DEFAULTS","NgxGauge","_elementRef","_renderer","this","_size","_min","_max","_initialized","max","type","cap","thick","foregroundColor","backgroundColor","thresholds","Object","create","_value","duration","defineProperty","prototype","get","set","val","ngOnChanges","changes","isTextChanged","isDataChanged","_update","_destroy","_init","_updateSize","setElementStyle","nativeElement","ngAfterViewInit","_canvas","ngOnDestroy","_getBounds","head","tail","Math","PI","_drawShell","start","middle","color","center","_getCenter","radius","_getRadius","_clear","_context","beginPath","strokeStyle","arc","x","y","stroke","clearRect","_getWidth","_getHeight","size","getContext","_setupStyles","_create","canvas","width","height","lineCap","lineWidth","_getForegroundColorByRange","match","keys","filter","item","isNumber","undefined","sort","a","b","reverse","requestID","starttime","self","bounds","min","clamp","displacement","window","requestAnimationFrame","timestamp","Date","getTime","animate","runtime","progress","cancelAnimationFrame","decorators","Component","args","selector","template","styles","host","role","[class.ngx-gauge-meter]","[attr.aria-valuemin]","[attr.aria-valuemax]","[attr.aria-valuenow]","encapsulation","ViewEncapsulation","None","ctorParameters","ElementRef","Renderer","propDecorators","ViewChild","Input","label","append","prepend","NgxGaugeModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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"}
