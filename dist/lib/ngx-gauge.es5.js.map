{"version":3,"file":"ngx-gauge.es5.js","sources":["ts/ngx.gauge.ts","ts/gauge/index.ts","ts/gauge/gauge.ts","ts/common/util.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgxGaugeModule} from './public_api';\n\nexport {NgxGauge as Éµa} from './gauge/gauge';","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxGauge} from './gauge';\nexport class NgxGaugeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [NgxGauge],\n    exports: [NgxGauge]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxGaugeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGaugeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGaugeModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation,\n    Renderer,\n    AfterViewInit,\n    ElementRef,\n    OnChanges,\n    OnDestroy,\n    ViewChild\n} from '@angular/core';\nimport { NgxGaugeError } from './gauge-error';\nimport {\n    clamp,\n    coerceBooleanProperty,\n    coerceNumberProperty,\n    cssUnit,\n    isNumber\n} from '../common/util';\n\nconst /** @type {?} */ DEFAULTS = {\n    MIN: 0,\n    MAX: 100,\n    TYPE: 'arch',\n    THICK: 4,\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n    CAP: 'butt',\n    SIZE: 200\n};\n\nexport type NgxGaugeType = 'full' | 'arch' | 'semi';\nexport type NgxGaugeCap = 'round' | 'butt';\nexport class NgxGauge implements AfterViewInit, OnChanges, OnDestroy {\n\n     _canvas: ElementRef;\nprivate _size: number = DEFAULTS.SIZE;\nprivate _min: number = DEFAULTS.MIN;\nprivate _max: number = DEFAULTS.MAX;\nprivate _initialized: boolean = false;\nprivate _context: CanvasRenderingContext2D;\n/**\n * @return {?}\n */\nget size(): number { return this._size; }\n/**\n * @param {?} value\n * @return {?}\n */\nset size(value: number) {\n        this._size = coerceNumberProperty(value);\n    }\n/**\n * @return {?}\n */\nget min(): number { return this._min; }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value: number) {\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\n    }\n\n     max: number = DEFAULTS.MAX;\n\n     type: NgxGaugeType = /** @type {?} */(( DEFAULTS.TYPE as NgxGaugeType));\n\n     cap: NgxGaugeCap = /** @type {?} */(( DEFAULTS.CAP as NgxGaugeCap));\n\n     thick: number = DEFAULTS.THICK;\n\n     label: string;\n\n     append: string;\n\n     prepend: string;\n\n     foregroundColor: string = DEFAULTS.FOREGROUND_COLOR;\n\n     backgroundColor: string = DEFAULTS.BACKGROUND_COLOR;\n\n     thresholds: Object = Object.create(null);\nprivate _value: number = 0;\n/**\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @param {?} val\n * @return {?}\n */\nset value(val: number) {\n        this._value = coerceNumberProperty(val);\n    }\n\n     duration: number = 1200;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        const /** @type {?} */ isTextChanged = changes['label'] || changes['append'] || changes['prepend'];\n        const /** @type {?} */ isDataChanged = changes['value'] || changes['min'] || changes['max'];\n\n        if (this._initialized) {\n            if (isDataChanged) {\n                this._update();\n            } else if (!isTextChanged) {\n                this._destroy();\n                this._init();\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate _updateSize() {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', cssUnit(this._size));\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'height', cssUnit(this._size));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        if (this._canvas) {\n            this._init();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._destroy();\n    }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getBounds(type: NgxGaugeType) {\n        let /** @type {?} */ head, /** @type {?} */ tail;\n        if (type == 'semi') {\n            head = Math.PI;\n            tail = 2 * Math.PI;\n        } else if (type == 'full') {\n            head = 1.5 * Math.PI;\n            tail = 3.5 * Math.PI;\n        } else if (type === 'arch') {\n            head = 0.8 * Math.PI;\n            tail = 2.2 * Math.PI;\n        }\n        return { head, tail };\n    }\n/**\n * @param {?} start\n * @param {?} middle\n * @param {?} tail\n * @param {?} color\n * @return {?}\n */\nprivate _drawShell(start: number, middle: number, tail: number, color: string) {\n        let /** @type {?} */ center = this._getCenter(), /** @type {?} */\n            radius = this._getRadius();\n\n        this._clear();\n        this._context.beginPath();\n        this._context.strokeStyle = this.backgroundColor;\n        this._context.arc(center.x, center.y, radius, middle, tail, false);\n        this._context.stroke();\n\n        this._context.beginPath();\n        this._context.strokeStyle = color;\n        this._context.arc(center.x, center.y, radius, start, middle, false);\n        this._context.stroke();\n\n    }\n/**\n * @return {?}\n */\nprivate _clear() {\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\n    }\n/**\n * @return {?}\n */\nprivate _getWidth() {\n        return this.size;\n    }\n/**\n * @return {?}\n */\nprivate _getHeight() {\n        return this.size;\n    }\n/**\n * @return {?}\n */\nprivate _getRadius() {\n        var /** @type {?} */ center = this._getCenter();\n        return center.x - this.thick;\n    }\n/**\n * @return {?}\n */\nprivate _getCenter() {\n        var /** @type {?} */ x = this._getWidth() / 2, /** @type {?} */\n            y = this._getHeight() / 2;\n        return { x, y };\n    }\n/**\n * @return {?}\n */\nprivate _init() {\n        this._context = ( /** @type {?} */((this._canvas.nativeElement as HTMLCanvasElement))).getContext('2d');\n        this._initialized = true;\n        this._updateSize();\n        this._setupStyles();\n        this._create();\n    }\n/**\n * @return {?}\n */\nprivate _destroy() {\n        this._clear();\n        this._context = null;\n    }\n/**\n * @return {?}\n */\nprivate _setupStyles() {\n        this._context.canvas.width = this.size;\n        this._context.canvas.height = this.size;\n        this._context.lineCap = this.cap;\n        this._context.lineWidth = this.thick;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getForegroundColorByRange(value) {\n       \n        const /** @type {?} */ match = Object.keys(this.thresholds)\n            .filter(function (item) { return isNumber(item) && Number(item) <= value })\n            .sort((a, b) => Number(a) - Number(b)).reverse()[0];\n\n        return match !== undefined\n            ? this.thresholds[match].color || this.foregroundColor\n            : this.foregroundColor;\n    }\n/**\n * @return {?}\n */\nprivate _create() {\n        let /** @type {?} */ self = this, /** @type {?} */\n            type = this.type, /** @type {?} */\n            bounds = this._getBounds(type), /** @type {?} */\n            duration = this.duration, /** @type {?} */\n            min = this.min, /** @type {?} */\n            max = this.max, /** @type {?} */\n            value = clamp(this.value, this.min, this.max), /** @type {?} */\n            head = bounds.head, /** @type {?} */\n            unit = (bounds.tail - bounds.head) / (max - min), /** @type {?} */\n            displacement = unit * (value - min), /** @type {?} */\n            tail = bounds.tail, /** @type {?} */\n            color = this._getForegroundColorByRange(value), /** @type {?} */\n            requestID, /** @type {?} */\n            starttime;\n/**\n * @param {?} timestamp\n * @return {?}\n */\nfunction animate(timestamp) {\n            timestamp = timestamp || new Date().getTime();\n            var /** @type {?} */ runtime = timestamp - starttime;\n            var /** @type {?} */ progress = runtime / duration;\n            progress = Math.min(progress, 1);\n\n            self._drawShell(head, head + displacement * progress, tail, color);\n            if (runtime < duration) {\n                requestID = window.requestAnimationFrame((timestamp) => animate(timestamp));\n            } else {\n                window.cancelAnimationFrame(requestID);\n            }\n        }\n\n        window.requestAnimationFrame((timestamp) => {\n            starttime = timestamp || new Date().getTime();\n            animate(timestamp);\n        });\n    }\n/**\n * @return {?}\n */\nprivate _update() {\n        this._clear();\n        this._create();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ngx-gauge',\n    template: `\n      <div class=\"reading-block\" #reading [style.fontSize]=\"size * 0.22 + 'px'\" [style.lineHeight]=\"55 + 'px'\">\n          <u class=\"reading-affix\">{{prepend}}</u>\n          <div [ngClass]=\"{\n      \t\t\t\t\t\t'high': value > 75,\n      \t\t\t\t\t\t'low' : value < 41,\n      \t\t\t\t\t\t'medium' : value < 76 && value > 40\n      \t\t\t\t\t}\">\n          \t{{value | number}}\n          </div>\n          <u class=\"reading-affix\">{{append}}</u>\n      </div>\n      <div [ngClass]=\"reading-label\" [style.fontSize]=\"size / 13 + 'px'\" [style.lineHeight]=\"(5 * size / 13) + size + 'px'\">{{label}}</div>\n      <canvas #canvas [width]=\"size\" [height]=\"size\"></canvas>\n    `,\n    styles: [`\n      .ngx-gauge-meter {\n          display: inline-block;\n          text-align: center;\n          position: relative;\n      }\n\n      .reading-block {\n          position: absolute;\n          width: 100%;\n          font-weight: normal;\n          white-space: nowrap;\n          text-align: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n      }\n\n      .reading-label {\n          font-family: inherit;\n          width: 100%;\n          display: inline-block;\n          position: absolute;\n          text-align: center;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          font-weight: normal;\n      }\n\n      .reading-affix {\n          text-decoration: none;\n          font-size: 0.6em;\n          opacity: 0.8;\n          font-weight: 200;\n          padding: 0 0.18em;\n      }\n\n      .reading-affix:first-child {\n          padding-left: 0;\n      }\n\n      .reading-affix:last-child {\n          padding-right: 0;\n      }\n\n      .high {\n          color: #2DB821;\n      }\n\n      .medium {\n          color: #FFAC30;\n      }\n\n      .low {\n          color: #FF213C;\n      }\n    `],\n    host: {\n        'role': 'meter',\n        '[class.ngx-gauge-meter]': 'true',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'value'\n    },\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_canvas': [{ type: ViewChild, args: ['canvas', ] },],\n'size': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'type': [{ type: Input },],\n'cap': [{ type: Input },],\n'thick': [{ type: Input },],\n'label': [{ type: Input },],\n'append': [{ type: Input },],\n'prepend': [{ type: Input },],\n'foregroundColor': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'thresholds': [{ type: Input },],\n'value': [{ type: Input },],\n'duration': [{ type: Input },],\n};\n}\n\nfunction NgxGauge_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGauge.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGauge.ctorParameters;\n/** @type {?} */\nNgxGauge.propDecorators;\n/** @type {?} */\nNgxGauge.prototype._canvas;\n/** @type {?} */\nNgxGauge.prototype._size;\n/** @type {?} */\nNgxGauge.prototype._min;\n/** @type {?} */\nNgxGauge.prototype._max;\n/** @type {?} */\nNgxGauge.prototype._initialized;\n/** @type {?} */\nNgxGauge.prototype._context;\n/** @type {?} */\nNgxGauge.prototype.max;\n/** @type {?} */\nNgxGauge.prototype.type;\n/** @type {?} */\nNgxGauge.prototype.cap;\n/** @type {?} */\nNgxGauge.prototype.thick;\n/** @type {?} */\nNgxGauge.prototype.label;\n/** @type {?} */\nNgxGauge.prototype.append;\n/** @type {?} */\nNgxGauge.prototype.prepend;\n/** @type {?} */\nNgxGauge.prototype.foregroundColor;\n/** @type {?} */\nNgxGauge.prototype.backgroundColor;\n/** @type {?} */\nNgxGauge.prototype.thresholds;\n/** @type {?} */\nNgxGauge.prototype._value;\n/** @type {?} */\nNgxGauge.prototype.duration;\n/** @type {?} */\nNgxGauge.prototype._elementRef;\n/** @type {?} */\nNgxGauge.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nexport function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nexport function coerceNumberProperty(value: any, fallbackValue: number = 0): number {\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function cssUnit(value: number) {\n    return `${value}px`;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumber(value: string) {\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}"],"names":[],"mappings":";;AGCA;;;;;;AAMA,eAPC,KAAA,EAAA,GAAA,EAAA,GAAA;IAQG,MAAJ,CAPW,IAAA,CAAK,GAAC,CAAG,GAAC,EAAI,IAAA,CAAK,GAAC,CAAG,GAAC,EAAI,KAAA,CAAM,CAAC,CAAC;AAQ/C,CAAC;;;;;;;;;;AAaD,8BAhBC,KAAA,EAAA,aAAA;IAAA,8BAAA,EAAA,iBAAA;IAiBG,MAAJ,CAhBW,KAAA,CAAM,UAAC,CAAU,KAAC,CAAK,CAAC,IAAI,KAAA,CAAM,MAAC,CAAM,KAAC,CAAK,CAAC,GAAG,aAAA,GAAgB,MAAA,CAAO,KAAC,CAAK,CAAC;AAiB5F,CAAC;;;;;AAKD,iBApBC,KAAA;IAqBG,MAAJ,CApBW,KAAI,OAAK,CAAI;AAqBxB,CAAC;;;;;AAKD,kBAxBC,KAAA;IAyBG,MAAJ,CAxBW,KAAA,IAAS,SAAA,IAAa,CAAA,KAAE,CAAK,UAAC,CAAU,KAAC,CAAK,CAAC,IAAI,CAAA,KAAE,CAAK,MAAC,CAAM,KAAC,CAAK,CAAC,CAAC;AAyBpF,CAAC;ADjBD,IAAM,QAAA,GAAW;IACb,GAAG,EAAE,CAAA;IACL,GAAG,EAAE,GAAA;IACL,IAAI,EAAE,MAAA;IACN,KAAK,EAAE,CAAA;IACP,gBAAgB,EAAE,sBAAA;IAClB,gBAAgB,EAAE,oBAAA;IAClB,GAAG,EAAE,MAAA;IACL,IAAI,EAAE,GAAA;CACT,CAAC;AAIF;;;;;IAoEA,kBAbwB,WAAa,EAAoB,SAAW;QAA5C,IAAxB,CAAA,WAAwB,GAAA,WAAA,CAAa;QAAoB,IAAzD,CAAA,SAAyD,GAAA,SAAA,CAAW;QAjDxD,IAAZ,CAAA,KAAY,GAAgB,QAAA,CAAS,IAAC,CAAI;QAC9B,IAAZ,CAAA,IAAY,GAAe,QAAA,CAAS,GAAC,CAAG;QAC5B,IAAZ,CAAA,IAAY,GAAe,QAAA,CAAS,GAAC,CAAG;QAE5B,IAAZ,CAAA,YAAY,GAAwB,KAAA,CAAM;QAqBrC,IAAL,CAAA,GAAQ,GANW,QAAA,CAAS,GAAC,CAAG;QAQ3B,IAAL,CAAA,IAAS,GAAT,CAN0B,QAAA,CAAS,IAAQ,CAAA,CAAa;QAQnD,IAAL,CAAA,GAAQ,GAAR,CANwB,QAAA,CAAS,GAAO,CAAA,CAAY;QAQ/C,IAAL,CAAA,KAAU,GANW,QAAA,CAAS,KAAC,CAAK;QAc/B,IAAL,CAAA,eAAoB,GANW,QAAA,CAAS,gBAAC,CAAgB;QAQpD,IAAL,CAAA,eAAoB,GANW,QAAA,CAAS,gBAAC,CAAgB;QAQpD,IAAL,CAAA,UAAe,GANW,MAAA,CAAO,MAAC,CAAM,IAAC,CAAI,CAAC;QAElC,IAAZ,CAAA,MAAY,GAAiB,CAAA,CAAE;QAkB1B,IAAL,CAAA,QAAa,GAVW,IAAA,CAAK;IAE7B,CAA6E;IA5C7E,sBAGK,0BAAA;;;;aAHL,cAGyB,MAHzB,CAGgC,IAAA,CAAK,KAAC,CAAK,CAH3C,CAG4C;;;;;aAE5C,UADK,KAAA;YAEG,IAAI,CADC,KAAC,GAAO,oBAAA,CAAqB,KAAC,CAAK,CAAC;QAEjD,CAAK;;;OAJuC;IAQ5C,sBAFK,yBAAA;;;;aAEL,cAFwB,MAExB,CAF+B,IAAA,CAAK,IAAC,CAAI,CAEzC,CAF0C;;;;;aAO1C,UANK,KAAA;YAOG,IAAI,CANC,IAAC,GAAM,oBAAA,CAAqB,KAAC,EAAM,QAAA,CAAS,GAAC,CAAG,CAAC;QAO9D,CAAK;;;OATqC;IAkC1C,sBANK,2BAAA;;;;aAML,cANkB,MAMlB,CANyB,IAAA,CAAK,MAAC,CAAM,CAMrC,CANsC;;;;;aAWtC,UAVK,GAAA;YAWG,IAAI,CAVC,MAAC,GAAQ,oBAAA,CAAqB,GAAC,CAAG,CAAC;QAWhD,CAAK;;;OAbiC;;;;;IA0BtC,8BAjBK,GAiBL,UAjBK,OAAA;QAkBG,IAAR,gBAAA,CAjBc,aAAA,GAAgB,OAAA,CAAQ,OAAC,CAAO,IAAI,OAAA,CAAQ,QAAC,CAAQ,IAAI,OAAA,CAAQ,SAAC,CAAS,CAAC;QAkBlF,IAAR,gBAAA,CAjBc,aAAA,GAAgB,OAAA,CAAQ,OAAC,CAAO,IAAI,OAAA,CAAQ,KAAC,CAAK,IAAI,OAAA,CAAQ,KAAC,CAAK,CAAC;QAmB3E,EAAR,CAAA,CAAY,IAjBC,CAAI,YAAC,CAiBlB,CAjB+B,CAiB/B;YACY,EAAZ,CAAA,CAAgB,aAjBC,CAiBjB,CAjB+B,CAiB/B;gBACgB,IAAI,CAjBC,OAAC,EAAO,CAAE;YAkB/B,CAAa;YAjBb,IAAA,CAAmB,EAAnB,CAAA,CAAmB,CAAK,aAAC,CAAzB,CAAuC,CAAvC;gBAkBgB,IAAI,CAjBC,QAAC,EAAQ,CAAE;gBAkBhB,IAAI,CAjBC,KAAC,EAAK,CAAE;YAkB7B,CAAa;QACb,CAAS;IACT,CAAK;;;;IAfA,8BAAA,GAAA;QAoBG,IAAI,CAnBC,SAAC,CAAS,eAAC,CAAe,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,OAAA,EAAS,OAAA,CAAQ,IAAC,CAAI,KAAC,CAAK,CAAC,CAAC;QAoB7F,IAAI,CAnBC,SAAC,CAAS,eAAC,CAAe,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,QAAA,EAAU,OAAA,CAAQ,IAAC,CAAI,KAAC,CAAK,CAAC,CAAC;IAoBtG,CAAK;;;;IAIL,kCArBK,GAqBL;QACQ,EAAR,CAAA,CAAY,IArBC,CAAI,OAAC,CAqBlB,CArB0B,CAqB1B;YACY,IAAI,CArBC,KAAC,EAAK,CAAE;QAsBzB,CAAS;IACT,CAAK;;;;IAIL,8BAvBK,GAuBL;QACQ,IAAI,CAvBC,QAAC,EAAQ,CAAE;IAwBxB,CAAK;;;;;IArBA,6BAAA,GAAA,UAAA,IAAA;QA2BG,IAAR,gBAAA,CA1BY,IAAA,EA0BZ,gBAAA,CA1BkB,IAAA,CAAK;QA2Bf,EAAR,CAAA,CAAY,IA1BC,IAAO,MAAA,CA0BpB,CA1B4B,CA0B5B;YACY,IAAI,GA1BG,IAAA,CAAK,EAAC,CAAE;YA2Bf,IAAI,GA1BG,CAAA,GAAI,IAAA,CAAK,EAAC,CAAE;QA2B/B,CAAS;QA1BT,IAAA,CAAe,EAAf,CAAA,CAAe,IAAK,IAAO,MAAA,CAA3B,CAAmC,CAAnC;YA2BY,IAAI,GA1BG,GAAA,GAAM,IAAA,CAAK,EAAC,CAAE;YA2BrB,IAAI,GA1BG,GAAA,GAAM,IAAA,CAAK,EAAC,CAAE;QA2BjC,CAAS;QA1BT,IAAA,CAAe,EAAf,CAAA,CAAe,IAAK,KAAQ,MAAA,CAA5B,CAAoC,CAApC;YA2BY,IAAI,GA1BG,GAAA,GAAM,IAAA,CAAK,EAAC,CAAE;YA2BrB,IAAI,GA1BG,GAAA,GAAM,IAAA,CAAK,EAAC,CAAE;QA2BjC,CAAS;QACD,MAAR,CA1Be,EAAE,IAAA,MAAA,EAAM,IAAA,MAAA,EAAK,CAAE;IA2B9B,CAAK;;;;;;;;IAxBA,6BAAA,GAAA,UAAA,KAAA,EAAA,MAAA,EAAA,IAAA,EAAA,KAAA;QAiCG,IAAR,gBAAA,CAhCY,MAAA,GAAS,IAAA,CAAK,UAAC,EAAU,EAgCrC,gBAAA,CACY,MAAM,GAhCG,IAAA,CAAK,UAAC,EAAU,CAAE;QAkC/B,IAAI,CAhCC,MAAC,EAAM,CAAE;QAiCd,IAAI,CAhCC,QAAC,CAAQ,SAAC,EAAS,CAAE;QAiC1B,IAAI,CAhCC,QAAC,CAAQ,WAAC,GAAa,IAAA,CAAK,eAAC,CAAe;QAiCjD,IAAI,CAhCC,QAAC,CAAQ,GAAC,CAAG,MAAC,CAAM,CAAC,EAAE,MAAA,CAAO,CAAC,EAAE,MAAA,EAAQ,MAAA,EAAQ,IAAA,EAAM,KAAA,CAAM,CAAC;QAiCnE,IAAI,CAhCC,QAAC,CAAQ,MAAC,EAAM,CAAE;QAkCvB,IAAI,CAhCC,QAAC,CAAQ,SAAC,EAAS,CAAE;QAiC1B,IAAI,CAhCC,QAAC,CAAQ,WAAC,GAAa,KAAA,CAAM;QAiClC,IAAI,CAhCC,QAAC,CAAQ,GAAC,CAAG,MAAC,CAAM,CAAC,EAAE,MAAA,CAAO,CAAC,EAAE,MAAA,EAAQ,KAAA,EAAO,MAAA,EAAQ,KAAA,CAAM,CAAC;QAiCpE,IAAI,CAhCC,QAAC,CAAQ,MAAC,EAAM,CAAE;IAkC/B,CAAK;;;;IA9BA,yBAAA,GAAA;QAmCG,IAAI,CAlCC,QAAC,CAAQ,SAAC,CAAS,CAAC,EAAE,CAAA,EAAG,IAAA,CAAK,SAAC,EAAS,EAAG,IAAA,CAAK,UAAC,EAAU,CAAE,CAAC;IAmC3E,CAAK;;;;IAhCA,4BAAA,GAAA;QAqCG,MAAR,CApCe,IAAA,CAAK,IAAC,CAAI;IAqCzB,CAAK;;;;IAlCA,6BAAA,GAAA;QAuCG,MAAR,CAtCe,IAAA,CAAK,IAAC,CAAI;IAuCzB,CAAK;;;;IApCA,6BAAA,GAAA;QAyCG,IAAR,gBAAA,CAxCY,MAAA,GAAS,IAAA,CAAK,UAAC,EAAU,CAAE;QAyC/B,MAAR,CAxCe,MAAA,CAAO,CAAC,GAAG,IAAA,CAAK,KAAC,CAAK;IAyCrC,CAAK;;;;IAtCA,6BAAA,GAAA;QA2CG,IAAR,gBAAA,CA1CY,CAAA,GAAI,IAAA,CAAK,SAAC,EAAS,GAAI,CAAA,EA0CnC,gBAAA,CACY,CAAC,GA1CG,IAAA,CAAK,UAAC,EAAU,GAAI,CAAA,CAAE;QA2C9B,MAAR,CA1Ce,EAAE,CAAA,GAAA,EAAG,CAAA,GAAA,EAAE,CAAE;IA2CxB,CAAK;;;;IAxCA,wBAAA,GAAA;QA6CG,IAAI,CA5CC,QAAC,GAAU,CA4CxB,CA5CwB,IAAE,CAAI,OAAC,CAAO,aAAiB,CA4CvD,CAAA,CA5C0E,UAAC,CAAU,IAAC,CAAI,CAAC;QA6CnF,IAAI,CA5CC,YAAC,GAAc,IAAA,CAAK;QA6CzB,IAAI,CA5CC,WAAC,EAAW,CAAE;QA6CnB,IAAI,CA5CC,YAAC,EAAY,CAAE;QA6CpB,IAAI,CA5CC,OAAC,EAAO,CAAE;IA6CvB,CAAK;;;;IA1CA,2BAAA,GAAA;QA+CG,IAAI,CA9CC,MAAC,EAAM,CAAE;QA+Cd,IAAI,CA9CC,QAAC,GAAU,IAAA,CAAK;IA+C7B,CAAK;;;;IA5CA,+BAAA,GAAA;QAiDG,IAAI,CAhDC,QAAC,CAAQ,MAAC,CAAM,KAAC,GAAO,IAAA,CAAK,IAAC,CAAI;QAiDvC,IAAI,CAhDC,QAAC,CAAQ,MAAC,CAAM,MAAC,GAAQ,IAAA,CAAK,IAAC,CAAI;QAiDxC,IAAI,CAhDC,QAAC,CAAQ,OAAC,GAAS,IAAA,CAAK,GAAC,CAAG;QAiDjC,IAAI,CAhDC,QAAC,CAAQ,SAAC,GAAW,IAAA,CAAK,KAAC,CAAK;IAiD7C,CAAK;;;;;IA9CA,6CAAA,GAAA,UAAA,KAAA;QAqDG,IAAR,gBAAA,CAnDc,KAAA,GAAQ,MAAA,CAAO,IAAC,CAAI,IAAC,CAAI,UAAC,CAAU;aAoDrC,MAnDC,CAAM,UAAC,IAAU,IAAO,MAmDtC,CAnD6C,QAAA,CAAS,IAAC,CAAI,IAAI,MAAA,CAAO,IAAC,CAAI,IAAI,KAAA,CAAA,CAmD/E,CAnDqF,CAAE;aAoD1E,IAnDC,CAAI,UAAC,CAAC,EAAE,CAAA,IAAM,OAAA,MAAA,CAAO,CAAC,CAAC,GAAG,MAAA,CAAO,CAAC,CAAC,EAArB,CAAqB,CAAC,CAAC,OAAC,EAAO,CAAE,CAAC,CAAC,CAAC;QAqDxD,MAAR,CAnDe,KAAA,KAAU,SAAA;cACX,IAAA,CAAK,UAAC,CAAU,KAAC,CAAK,CAAC,KAAC,IAAQ,IAAA,CAAK,eAAC;cACtC,IAAA,CAAK,eAAC,CAAe;IAoDnC,CAAK;;;;IAjDA,0BAAA,GAAA;QAsDG,IAAR,gBAAA,CArDY,IAAA,GAAO,IAAA,EAqDnB,gBAAA,CACY,IAAI,GArDG,IAAA,CAAK,IAAC,EAoDzB,gBAAA,CAEY,MAAM,GArDG,IAAA,CAAK,UAAC,CAAU,IAAC,CAAI,EAmD1C,gBAAA,CAGY,QAAQ,GArDG,IAAA,CAAK,QAAC,EAkD7B,gBAAA,CAIY,GAAG,GArDG,IAAA,CAAK,GAAC,EAiDxB,gBAAA,CAKY,GAAG,GArDG,IAAA,CAAK,GAAC,EAgDxB,gBAAA,CAMY,KAAK,GArDG,KAAA,CAAM,IAAC,CAAI,KAAC,EAAM,IAAA,CAAK,GAAC,EAAI,IAAA,CAAK,GAAC,CAAG,EA+CzD,gBAAA,CAOY,IAAI,GArDG,MAAA,CAAO,IAAC,EA8C3B,gBAAA,CAQY,IAAI,GArDG,CAAA,MAAE,CAAM,IAAC,GAAM,MAAA,CAAO,IAAC,CA6C1C,GAAA,CA7CiD,GAAE,GAAK,GAAA,CAAI,EA6C5D,gBAAA,CASY,YAAY,GArDG,IAAA,GA4C3B,CA5CkC,KAAE,GAAO,GAAA,CAAI,EA4C/C,gBAAA,CAUY,IAAI,GArDG,MAAA,CAAO,IAAC,EA2C3B,gBAAA,CAWY,KAAK,GArDG,IAAA,CAAK,0BAAC,CAA0B,KAAC,CAAK,EA0C1D,gBAAA,CAYY,SAAS,EAZrB,gBAAA,CAaY,SAAS,CArDC;;;;;QA0DtB,iBAxDS,SAAA;YAyDG,SAAS,GAxDG,SAAA,IAAa,IAAI,IAAA,EAAK,CAAE,OAAC,EAAO,CAAE;YAyD9C,IAAZ,gBAAA,CAxDgB,OAAA,GAAU,SAAA,GAAY,SAAA,CAAU;YAyDpC,IAAZ,gBAAA,CAxDgB,QAAA,GAAW,OAAA,GAAU,QAAA,CAAS;YAyDlC,QAAQ,GAxDG,IAAA,CAAK,GAAC,CAAG,QAAC,EAAS,CAAA,CAAE,CAAC;YA0DjC,IAAI,CAxDC,UAAC,CAAU,IAAC,EAAK,IAAA,GAAO,YAAA,GAAe,QAAA,EAAU,IAAA,EAAM,KAAA,CAAM,CAAC;YAyDnE,EAAZ,CAAA,CAAgB,OAxDC,GAAS,QAAA,CAwD1B,CAxDoC,CAwDpC;gBACgB,SAAS,GAxDG,MAAA,CAAO,qBAAC,CAAqB,UAAC,SAAC,IAAa,OAAA,OAAA,CAAQ,SAAC,CAAS,EAAlB,CAAkB,CAAC,CAAC;YAyD5F,CAAa;YAxDb,IAAA,CAAmB,CAAnB;gBAyDgB,MAAM,CAxDC,oBAAC,CAAoB,SAAC,CAAS,CAAC;YAyDvD,CAAa;QACb,CAAS;QAED,MAAM,CAxDC,qBAAC,CAAqB,UAAC,SAAC;YAyD3B,SAAS,GAxDG,SAAA,IAAa,IAAI,IAAA,EAAK,CAAE,OAAC,EAAO,CAAE;YAyD9C,OAAO,CAxDC,SAAC,CAAS,CAAC;QAyD/B,CAAS,CAxDC,CAAC;IAyDX,CAAK;;;;IAtDA,0BAAA,GAAA;QA2DG,IAAI,CA1DC,MAAC,EAAM,CAAE;QA2Dd,IAAI,CA1DC,OAAC,EAAO,CAAE;IA2DvB,CAAK;;CA7QL;AAqNO,QAAP,CAAA,UAAO,GAAoC;IA2D3C,EA1DE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBA2DrB,QAAQ,EA1DE,WAAA;gBA2DV,QAAQ,EA1DE,0rBAwET;gBACD,MAAM,EA1DE,CAAA,8qCAkHP,CA1DC;gBA2DF,IAAI,EA1DE;oBA2DF,MAAM,EA1DE,OAAA;oBA2DR,yBAAyB,EA1DE,MAAA;oBA2D3B,sBAAsB,EA1DE,KAAA;oBA2DxB,sBAAsB,EA1DE,KAAA;oBA2DxB,sBAAsB,EA1DE,OAAA;iBA2D3B;gBACD,aAAa,EA1DE,iBAAA,CAAkB,IAAC;aA2DrC,EA1DC,EAAG;CA2DJ,CA1DC;;;;AAED,QAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IA6DD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,EA/DA,CA+DA,CAAC;AA3DK,QAAP,CAAA,cAAO,GAAyD;IA6DhE,SAAS,EA5DE,CAAA,EAAG,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,QAAE,EAAQ,EAAG,EAAE;IA6DpD,MAAM,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6DzB,KAAK,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6DxB,KAAK,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6DxB,MAAM,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6DzB,KAAK,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6DxB,OAAO,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6D1B,OAAO,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6D1B,QAAQ,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6D3B,SAAS,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6D5B,iBAAiB,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6DpC,iBAAiB,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6DpC,YAAY,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6D/B,OAAO,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6D1B,UAAU,EA5DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CA6D5B,CA5DC;AD9VF;IAAA;;;CAAA;AAEqC,cAArC,CAAA,UAAqC,GAAoC;IADzE,EAEE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBADpB,OAAO,EAEE,CAAA,YAAE,CAAY;gBADvB,YAAY,EAEE,CAAA,QAAE,CAAQ;gBADxB,OAAO,EAEE,CAAA,QAAE,CAAQ;aADtB,EAEC,EAAG;CADJ,CAEC;;;;AAED,cAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADdF;;GAEG;"}
