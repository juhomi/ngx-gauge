{"version":3,"file":"ngx-gauge.js","sources":["ts/ngx.gauge.ts","ts/gauge/index.ts","ts/gauge/gauge.ts","ts/common/util.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgxGaugeModule} from './public_api';\n\nexport {NgxGauge as Éµa} from './gauge/gauge';","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxGauge} from './gauge';\nexport class NgxGaugeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [NgxGauge],\n    exports: [NgxGauge]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxGaugeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGaugeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGaugeModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation,\n    Renderer,\n    AfterViewInit,\n    ElementRef,\n    OnChanges,\n    OnDestroy,\n    ViewChild\n} from '@angular/core';\nimport { NgxGaugeError } from './gauge-error';\nimport {\n    clamp,\n    coerceBooleanProperty,\n    coerceNumberProperty,\n    cssUnit,\n    isNumber\n} from '../common/util';\n\nconst /** @type {?} */ DEFAULTS = {\n    MIN: 0,\n    MAX: 100,\n    TYPE: 'arch',\n    THICK: 4,\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n    CAP: 'butt',\n    SIZE: 200\n};\n\nexport type NgxGaugeType = 'full' | 'arch' | 'semi';\nexport type NgxGaugeCap = 'round' | 'butt';\nexport class NgxGauge implements AfterViewInit, OnChanges, OnDestroy {\n\n     _canvas: ElementRef;\nprivate _size: number = DEFAULTS.SIZE;\nprivate _min: number = DEFAULTS.MIN;\nprivate _max: number = DEFAULTS.MAX;\nprivate _initialized: boolean = false;\nprivate _context: CanvasRenderingContext2D;\n/**\n * @return {?}\n */\nget size(): number { return this._size; }\n/**\n * @param {?} value\n * @return {?}\n */\nset size(value: number) {\n        this._size = coerceNumberProperty(value);\n    }\n/**\n * @return {?}\n */\nget min(): number { return this._min; }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value: number) {\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\n    }\n\n     max: number = DEFAULTS.MAX;\n\n     type: NgxGaugeType = /** @type {?} */(( DEFAULTS.TYPE as NgxGaugeType));\n\n     cap: NgxGaugeCap = /** @type {?} */(( DEFAULTS.CAP as NgxGaugeCap));\n\n     thick: number = DEFAULTS.THICK;\n\n     label: string;\n\n     append: string;\n\n     prepend: string;\n\n     foregroundColor: string = DEFAULTS.FOREGROUND_COLOR;\n\n     backgroundColor: string = DEFAULTS.BACKGROUND_COLOR;\n\n     thresholds: Object = Object.create(null);\nprivate _value: number = 0;\n/**\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @param {?} val\n * @return {?}\n */\nset value(val: number) {\n        this._value = coerceNumberProperty(val);\n    }\n\n     duration: number = 1200;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        const /** @type {?} */ isTextChanged = changes['label'] || changes['append'] || changes['prepend'];\n        const /** @type {?} */ isDataChanged = changes['value'] || changes['min'] || changes['max'];\n\n        if (this._initialized) {\n            if (isDataChanged) {\n                this._update();\n            } else if (!isTextChanged) {\n                this._destroy();\n                this._init();\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate _updateSize() {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', cssUnit(this._size));\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'height', cssUnit(this._size));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        if (this._canvas) {\n            this._init();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._destroy();\n    }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getBounds(type: NgxGaugeType) {\n        let /** @type {?} */ head, /** @type {?} */ tail;\n        if (type == 'semi') {\n            head = Math.PI;\n            tail = 2 * Math.PI;\n        } else if (type == 'full') {\n            head = 1.5 * Math.PI;\n            tail = 3.5 * Math.PI;\n        } else if (type === 'arch') {\n            head = 0.8 * Math.PI;\n            tail = 2.2 * Math.PI;\n        }\n        return { head, tail };\n    }\n/**\n * @param {?} start\n * @param {?} middle\n * @param {?} tail\n * @param {?} color\n * @return {?}\n */\nprivate _drawShell(start: number, middle: number, tail: number, color: string) {\n        let /** @type {?} */ center = this._getCenter(), /** @type {?} */\n            radius = this._getRadius();\n\n        this._clear();\n        this._context.beginPath();\n        this._context.strokeStyle = this.backgroundColor;\n        this._context.arc(center.x, center.y, radius, middle, tail, false);\n        this._context.stroke();\n\n        this._context.beginPath();\n        this._context.strokeStyle = color;\n        this._context.arc(center.x, center.y, radius, start, middle, false);\n        this._context.stroke();\n\n    }\n/**\n * @return {?}\n */\nprivate _clear() {\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\n    }\n/**\n * @return {?}\n */\nprivate _getWidth() {\n        return this.size;\n    }\n/**\n * @return {?}\n */\nprivate _getHeight() {\n        return this.size;\n    }\n/**\n * @return {?}\n */\nprivate _getRadius() {\n        var /** @type {?} */ center = this._getCenter();\n        return center.x - this.thick;\n    }\n/**\n * @return {?}\n */\nprivate _getCenter() {\n        var /** @type {?} */ x = this._getWidth() / 2, /** @type {?} */\n            y = this._getHeight() / 2;\n        return { x, y };\n    }\n/**\n * @return {?}\n */\nprivate _init() {\n        this._context = ( /** @type {?} */((this._canvas.nativeElement as HTMLCanvasElement))).getContext('2d');\n        this._initialized = true;\n        this._updateSize();\n        this._setupStyles();\n        this._create();\n    }\n/**\n * @return {?}\n */\nprivate _destroy() {\n        this._clear();\n        this._context = null;\n    }\n/**\n * @return {?}\n */\nprivate _setupStyles() {\n        this._context.canvas.width = this.size;\n        this._context.canvas.height = this.size;\n        this._context.lineCap = this.cap;\n        this._context.lineWidth = this.thick;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getForegroundColorByRange(value) {\n       \n        const /** @type {?} */ match = Object.keys(this.thresholds)\n            .filter(function (item) { return isNumber(item) && Number(item) <= value })\n            .sort((a, b) => Number(a) - Number(b)).reverse()[0];\n\n        return match !== undefined\n            ? this.thresholds[match].color || this.foregroundColor\n            : this.foregroundColor;\n    }\n/**\n * @return {?}\n */\nprivate _create() {\n        let /** @type {?} */ self = this, /** @type {?} */\n            type = this.type, /** @type {?} */\n            bounds = this._getBounds(type), /** @type {?} */\n            duration = this.duration, /** @type {?} */\n            min = this.min, /** @type {?} */\n            max = this.max, /** @type {?} */\n            value = clamp(this.value, this.min, this.max), /** @type {?} */\n            head = bounds.head, /** @type {?} */\n            unit = (bounds.tail - bounds.head) / (max - min), /** @type {?} */\n            displacement = unit * (value - min), /** @type {?} */\n            tail = bounds.tail, /** @type {?} */\n            color = this._getForegroundColorByRange(value), /** @type {?} */\n            requestID, /** @type {?} */\n            starttime;\n/**\n * @param {?} timestamp\n * @return {?}\n */\nfunction animate(timestamp) {\n            timestamp = timestamp || new Date().getTime();\n            var /** @type {?} */ runtime = timestamp - starttime;\n            var /** @type {?} */ progress = runtime / duration;\n            progress = Math.min(progress, 1);\n\n            self._drawShell(head, head + displacement * progress, tail, color);\n            if (runtime < duration) {\n                requestID = window.requestAnimationFrame((timestamp) => animate(timestamp));\n            } else {\n                window.cancelAnimationFrame(requestID);\n            }\n        }\n\n        window.requestAnimationFrame((timestamp) => {\n            starttime = timestamp || new Date().getTime();\n            animate(timestamp);\n        });\n    }\n/**\n * @return {?}\n */\nprivate _update() {\n        this._clear();\n        this._create();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ngx-gauge',\n    template: `\n      <div class=\"reading-block\" #reading [style.fontSize]=\"size * 0.22 + 'px'\" [style.lineHeight]=\"55 + 'px'\">\n          <u class=\"reading-affix\">{{prepend}}</u>\n          <div [ngClass]=\"{\n      \t\t\t\t\t\t'high': value > 75,\n      \t\t\t\t\t\t'low' : value < 41,\n      \t\t\t\t\t\t'medium' : value < 76 && value > 40\n      \t\t\t\t\t}\">\n          \t{{value | number}}\n          </div>\n          <u class=\"reading-affix\">{{append}}</u>\n      </div>\n      <div [ngClass]=\"reading-label\" [style.fontSize]=\"size / 13 + 'px'\" [style.lineHeight]=\"(5 * size / 13) + size + 'px'\">{{label}}</div>\n      <canvas #canvas [width]=\"size\" [height]=\"size\"></canvas>\n    `,\n    styles: [`\n      .ngx-gauge-meter {\n          display: inline-block;\n          text-align: center;\n          position: relative;\n      }\n\n      .reading-block {\n          position: absolute;\n          width: 100%;\n          font-weight: normal;\n          white-space: nowrap;\n          text-align: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n      }\n\n      .reading-label {\n          font-family: inherit;\n          width: 100%;\n          display: inline-block;\n          position: absolute;\n          text-align: center;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          font-weight: normal;\n      }\n\n      .reading-affix {\n          text-decoration: none;\n          font-size: 0.6em;\n          opacity: 0.8;\n          font-weight: 200;\n          padding: 0 0.18em;\n      }\n\n      .reading-affix:first-child {\n          padding-left: 0;\n      }\n\n      .reading-affix:last-child {\n          padding-right: 0;\n      }\n\n      .high {\n          color: #2DB821;\n      }\n\n      .medium {\n          color: #FFAC30;\n      }\n\n      .low {\n          color: #FF213C;\n      }\n    `],\n    host: {\n        'role': 'meter',\n        '[class.ngx-gauge-meter]': 'true',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'value'\n    },\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_canvas': [{ type: ViewChild, args: ['canvas', ] },],\n'size': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'type': [{ type: Input },],\n'cap': [{ type: Input },],\n'thick': [{ type: Input },],\n'label': [{ type: Input },],\n'append': [{ type: Input },],\n'prepend': [{ type: Input },],\n'foregroundColor': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'thresholds': [{ type: Input },],\n'value': [{ type: Input },],\n'duration': [{ type: Input },],\n};\n}\n\nfunction NgxGauge_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxGauge.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxGauge.ctorParameters;\n/** @type {?} */\nNgxGauge.propDecorators;\n/** @type {?} */\nNgxGauge.prototype._canvas;\n/** @type {?} */\nNgxGauge.prototype._size;\n/** @type {?} */\nNgxGauge.prototype._min;\n/** @type {?} */\nNgxGauge.prototype._max;\n/** @type {?} */\nNgxGauge.prototype._initialized;\n/** @type {?} */\nNgxGauge.prototype._context;\n/** @type {?} */\nNgxGauge.prototype.max;\n/** @type {?} */\nNgxGauge.prototype.type;\n/** @type {?} */\nNgxGauge.prototype.cap;\n/** @type {?} */\nNgxGauge.prototype.thick;\n/** @type {?} */\nNgxGauge.prototype.label;\n/** @type {?} */\nNgxGauge.prototype.append;\n/** @type {?} */\nNgxGauge.prototype.prepend;\n/** @type {?} */\nNgxGauge.prototype.foregroundColor;\n/** @type {?} */\nNgxGauge.prototype.backgroundColor;\n/** @type {?} */\nNgxGauge.prototype.thresholds;\n/** @type {?} */\nNgxGauge.prototype._value;\n/** @type {?} */\nNgxGauge.prototype.duration;\n/** @type {?} */\nNgxGauge.prototype._elementRef;\n/** @type {?} */\nNgxGauge.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nexport function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nexport function coerceNumberProperty(value: any, fallbackValue: number = 0): number {\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function cssUnit(value: number) {\n    return `${value}px`;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumber(value: string) {\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}"],"names":[],"mappings":"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"}
